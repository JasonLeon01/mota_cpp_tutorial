工具说明
=======

可视化地图编辑器MotaMapDesigner.exe
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

这里可以对游戏地图进行绘制。

事件名称介绍
-----------

可以看到，每个地图上的元素都由事件构成，而事件执行什么内容，会依托事件名，这里提供了几种基础的事件，如果有更多的需要，可以在 ``gamedata.cpp`` 的 ``GameEvent::order()`` 函数中自己定义。

每种事件的不同编号依托/号区分，下面展示目前提供的事件名称：

墙壁类
^^^^^^
其实并没有固定的命名格式，因为墙壁仅仅是没有 *order* 的事件而已，任何不存在于 ``order()`` 函数里的名称均可作为墙壁，不过本框架中约定为 ``wall`` 。

怪物类
^^^^^^
怪物类的命名方式为 ``monster/x`` ， ``x`` 代表的是怪物编号。

.. hint:: 如果您希望在战斗后对游戏内的变量（此处仅代指 ``motaVariables.variables`` ）进行更改，可以将怪物名字命名为 ``monster/x/y/z`` ，代表着在与 ``x`` 号怪物战斗之后，将会对 ``y`` 号变量增加 ``z`` （z可以为负，代表着减少）。

宝石血瓶类
^^^^^^^^^^
也就是能力值增加的事件，命名方式为： ``bonus/x/y`` ，其中 ``y`` 为增加的数值，而 ``x`` 代表的内容如下所示：

.. csv-table:: bonus事件x值对应参考
    :header: "x", "0", "1", "2", "3", "4", "5"
    :widths: 20, 30, 30, 30, 30, 30, 30

    "代表", "生命值", "攻击力", "防御力", "魔防", "经验", "金币"

门类
^^^^
命名方式为 ``door/x`` ，其中x为门的编号， ``x`` 代表的内容如下所示：

.. csv-table:: door事件x值对应参考
    :header: "x", "0", "1", "2", "3"
    :widths: 20, 30, 30, 30, 30

    "代表", "暗墙", "黄门", "蓝门", "红门"

.. hint:: “暗墙”不一定是墙，也可以是一推就倒的门，比如类机关门、新新魔塔入口处的铁门，均可用这个事件。

物品类
^^^^^^
命名方式为 ``item/x/y`` ，其中 ``x`` 为物品编号， ``y`` 为获取数量。

比如 *获取1把黄钥匙（0号物品）* 的事件名为 ``item/0/1`` 。

商店类
^^^^^^
命名方式为 ``shop/x/y`` ，其中 ``x`` 为商店类型， *0* 为金币商店（默认是新新魔塔类商店，可以通过 ``main.cpp`` 的 ``WindowShop`` 类进行更改）， *1* 为经验商店（同样也是默认为新新魔塔类商店）， ``y`` 为商店编号，用于计算价格。

其中，商店价格数组在 ``motaTemp`` 里面进行初始化，y的值对应数组的下标，本框架默认的金币商店初始价格为 ``[20,50]`` ，增加的能力值为 ``[300*y+500,3*y+3,3*y+3]`` 经验商店的分别价格是 ``[[70,20,20],[190,50,50]]`` ，增加的能力值为 ``[2*y+1,2*y+1,3*y+2]`` ，当然，这些计算方式您都可以自行调节。

上下楼
^^^^^^
这个非常简单，就是对应 ``up`` 和 ``down`` ，其中是含有上下楼动画的，这些您可以自行调整或者取消，上下楼动画为 ``graphics\system\mting.png`` 文件。

NPC
^^^^
NPC的命名方式为 ``npc/x`` ，会自动寻找数据库里的npc数据完成对话，这一部分的编辑在 **对话编辑器** 里面可以了解。
